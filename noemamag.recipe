from calibre.web.feeds.news import BasicNewsRecipe
from calibre.utils.date import parse_date
from datetime import datetime, timedelta

class NoemaMagazine(BasicNewsRecipe):
    title = 'Noema Magazine'
    description = 'Philosophy, science, culture and society essays'
    language = 'en'
    __author__ = 'Berggruen Institute'
    oldest_article = 90  # days (essays have lasting value)
    max_articles_per_feed = 50
    no_stylesheets = True
    remove_javascript = True
    use_embedded_content = True
    encoding = 'utf-8'
    auto_cleanup = True
    timeout = 30
    timefmt = '[%Y-%m-%d]'
    delay = 2  # seconds between downloads
    
    feeds = [
        ('Essays', 'https://www.noemamag.com/feed/'),
        ('Interviews', 'https://www.noemamag.com/interviews/feed/'),
        ('Columns', 'https://www.noemamag.com/columns/feed/')
    ]
    
    keep_only_tags = [
        dict(name='article'),
        dict(name='div', attrs={'class': 'article-content'}),
    ]
    
    remove_tags = [
        dict(name='div', attrs={'class': 'article-share'}),
        dict(name='div', attrs={'class': 'article-tags'}),
        dict(name='div', attrs={'class': 'article-related'}),
        dict(name='div', attrs={'class': 'article-author-box'}),
        dict(name='div', attrs={'class': 'newsletter-signup'}),
        dict(name='div', attrs={'class': 'comments'}),
        dict(name='aside'),
        dict(name='script'),
        dict(name='style'),
        dict(name='iframe'),
        dict(name='form'),
    ]
    
    extra_css = '''
        h1.article-title { 
            font-size: 1.8em; 
            margin-bottom: 0.4em;
            font-weight: 500;
            line-height: 1.3;
        }
        .article-subtitle {
            font-size: 1.3em;
            color: #555;
            font-style: italic;
            margin-bottom: 1em;
            line-height: 1.4;
        }
        .article-meta {
            color: #666;
            font-size: 0.9em;
            margin-bottom: 1.5em;
            border-bottom: 1px solid #eee;
            padding-bottom: 1em;
        }
        .article-content {
            font-family: Georgia, serif;
            font-size: 1.1em;
            line-height: 1.7;
        }
        .article-content p {
            margin: 1.2em 0;
            text-align: justify;
        }
        .article-content h2 {
            font-size: 1.4em;
            margin: 1.8em 0 1em 0;
            font-weight: 500;
            border-bottom: 1px solid #eee;
            padding-bottom: 0.3em;
        }
        .article-content blockquote {
            font-style: italic;
            color: #555;
            margin: 1.5em 2em;
            padding-left: 1em;
            border-left: 3px solid #ddd;
        }
        .article-content img {
            max-width: 100%;
            height: auto;
            margin: 1.5em auto;
            display: block;
        }
        .article-divider {
            height: 1px;
            background: #eee;
            margin: 3em 0;
        }
    '''
    
    def preprocess_html(self, soup):
        # Reorganize article header elements
        header = soup.find('header', class_='article-header')
        if header:
            title = header.find('h1')
            subtitle = header.find('div', class_='article-subtitle')
            meta = header.find('div', class_='article-meta')
            
            article_content = soup.find('div', class_='article-content')
            if article_content:
                if title:
                    article_content.insert(0, title)
                if subtitle:
                    article_content.insert(1, subtitle)
                if meta:
                    article_content.insert(2, meta)
        
        # Clean up images
        for img in soup.find_all('img'):
            if 'data-src' in img.attrs:
                img['src'] = img['data-src']
                del img['data-src']
            if 'srcset' in img.attrs:
                del img['srcset']
            img['style'] = 'max-width: 100%; height: auto;'
        
        # Add divider between articles
        divider = soup.new_tag('div', attrs={'class': 'article-divider'})
        soup.append(divider)
        
        return soup
    
    def parse_feeds(self):
        feeds = BasicNewsRecipe.parse_feeds(self)
        for feed in feeds:
            for article in feed.articles:
                # Clean up dates
                if article.date:
                    article.date = parse_date(article.date)
                
                # Add category prefix to titles
                if 'interviews' in article.url:
                    article.title = f"Interview: {article.title}"
                elif 'columns' in article.url:
                    article.title = f"Column: {article.title}"
                
        return feeds